Python 3.8.3 (tags/v3.8.3:6f8c832, May 13 2020, 22:20:19) [MSC v.1925 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> a=12
>>> type(a)
<class 'int'>
>>> b=23.13
>>> type(b)
<class 'float'>
>>> c="Anobhama"
>>> type(c)
<class 'str'>
>>> d=[1,2,3,4,5]
>>> type(d)
<class 'list'>
>>> e={1,2,3,4,5}
>>> type(e)
<class 'set'>
>>> f=(1,2)
>>> type(f)
<class 'tuple'>
>>> lst=[1,3,"ano",23.7.99]
  File "<stdin>", line 1
    lst=[1,3,"ano",23.7.99]
                       ^
SyntaxError: invalid syntax
>>> lst=[1,3,"ano",23.7]
>>> lst
[1, 3, 'ano', 23.7]
>>> print(lst)
[1, 3, 'ano', 23.7]
>>> lst[-1]
23.7
>>> lst[1:]
[3, 'ano', 23.7]
>>> lst[0]
1
>>> lst.append(99)
>>> lst'
  File "<stdin>", line 1
    lst'
       ^
SyntaxError: EOL while scanning string literal
>>> lst
[1, 3, 'ano', 23.7, 99]
>>> lst.pop()
99
>>> lst
[1, 3, 'ano', 23.7]
>>> lst.insert("bhama")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: insert expected 2 arguments, got 1
>>> lst.insert(4,"bhama")
>>> lst
[1, 3, 'ano', 23.7, 'bhama']
>>> lst.clear()
>>> lst
[]
>>> lst=[1,2,3,4,5,6,7]
>>> lst
[1, 2, 3, 4, 5, 6, 7]
>>> lst.remove(7)
>>> lst
[1, 2, 3, 4, 5, 6]
>>> lst.extend(7,8,9,10)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: extend() takes exactly one argument (4 given)
>>> lst.extend([7,8,9,10])
>>> lst
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> lst.count()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: count() takes exactly one argument (0 given)
>>> lst.count(2)
1
>>> lst.insert(10,[1,5,8,3])
>>> lst
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, [1, 5, 8, 3]]
>>> lst.count(5)
1
>>> lst[10]
[1, 5, 8, 3]
>>> lst.pop()
[1, 5, 8, 3]
>>> lst
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> sum(lst)
55
>>> lst.extend([2,5,7,9])
>>> lst
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 2, 5, 7, 9]
>>> lst.count(5)
2
>>> lst.min()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'min'
>>> min(lst)
1
>>> max(lst)
10
>>> lst.sort()
>>> lst
[1, 2, 2, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9, 10]
>>> tup=(1,2,3,4,4)
>>> tup
(1, 2, 3, 4, 4)
>>> tup[3]
4
>>> tup[7]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: tuple index out of range
>>> tup[:3]
(1, 2, 3)
>>> tup.count(4)
2
>>> set={1,2,3,5,7,34,2,1,67}
>>> name={"ano","krithi","bottle"}
>>> name
{'krithi', 'ano', 'bottle'}
>>> name.add("bhavya")
>>> name
{'bhavya', 'krithi', 'ano', 'bottle'}
>>> print(len(name))
4
>>> set
{1, 2, 3, 34, 5, 67, 7}
>>> set2={6,7,8,9,"ano"}
>>> set2
{6, 7, 8, 9, 'ano'}
>>> set.union(set2)
{1, 2, 3, 34, 5, 67, 7, 6, 8, 9, 'ano'}
>>> set2.update(1,2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'int' object is not iterable
>>> set3=(1,2)
>>> set2.update(set3)
>>> set2
{1, 2, 6, 7, 8, 9, 'ano'}
>>> set3
(1, 2)
>>> set.intersection(set2)
{1, 2, 7}
>>> n1=1,2,3
>>> n2=n1
>>> id(n2)
8514824
>>> id(n1)
8514824
>>> id(1)
1807480752
>>> id(3)
1807480784
>>> id(10)
1807480896
>>>
